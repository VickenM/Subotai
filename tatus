[1mdiff --git a/pywerlines/pywerview.py b/pywerlines/pywerview.py[m
[1mindex 185aa92..97849d3 100644[m
[1m--- a/pywerlines/pywerview.py[m
[1m+++ b/pywerlines/pywerview.py[m
[36m@@ -16,6 +16,7 @@[m [mclass PywerView(QtWidgets.QGraphicsView):[m
         self.scale(1.0, 1.0)[m
 [m
         self.new_edge = None[m
[32m+[m[32m        self.c = 0[m
 [m
     def setScene(self, scene):[m
         super(PywerView, self).setScene(scene)[m
[36m@@ -44,6 +45,15 @@[m [mclass PywerView(QtWidgets.QGraphicsView):[m
         for y in range(int(top_right.y()), int(bottom_left.y()), 250):[m
             painter.drawLine(bottom_left.x(), y, top_right.x(), y)[m
 [m
[32m+[m[32m    def reset_new_edge(self):[m
[32m+[m[32m        self.new_edge.source_plug = None[m
[32m+[m[32m        self.new_edge.target_plug = None[m
[32m+[m[32m        self.new_edge.target_position = None[m
[32m+[m[32m        self.new_edge.start = QtCore.QPoint()[m
[32m+[m[32m        self.new_edge.end = QtCore.QPoint()[m
[32m+[m[32m        self.new_edge.adjust()[m
[32m+[m[32m        self.new_edge.hide()[m
[32m+[m
     def drag_edge_from(self, plug):[m
         if not plug:[m
             return None[m
[36m@@ -62,24 +72,13 @@[m [mclass PywerView(QtWidgets.QGraphicsView):[m
         return items[0][m
 [m
     def perform_new_connection(self):[m
[31m-        if not self.new_edge.target_position:[m
[31m-            return[m
[31m-[m
         position = self.new_edge.target_position.toPoint()[m
         plug = self.get_plug_at(position=self.mapFromScene(position))[m
 [m
         if self.new_edge.source_plug:[m
             self.scene().create_edge(self.new_edge.source_plug, plug)[m
[31m-        elif self.new_edge.target_plug:[m
[31m-            self.scene().create_edge(plug, self.new_edge.target_plug)[m
 [m
[31m-        self.new_edge.source_plug = None[m
[31m-        self.new_edge.target_plug = None[m
[31m-        self.new_edge.target_position = None[m
[31m-        self.new_edge.start = QtCore.QPoint()[m
[31m-        self.new_edge.end = QtCore.QPoint()[m
[31m-        self.new_edge.adjust()[m
[31m-        self.new_edge.hide()[m
[32m+[m[32m        self.reset_new_edge()[m
 [m
     def scaleView(self, scaleFactor):[m
         # abs_factor = self.transform().scale(scaleFactor, scaleFactor).mapRect(QtCore.QRectF(0, 0, 1, 1)).width()[m
[36m@@ -105,9 +104,10 @@[m [mclass PywerView(QtWidgets.QGraphicsView):[m
                     edge.source_plug.update()[m
                     edge.target_plug.update()[m
 [m
[32m+[m[32m                    self.reset_new_edge()[m
[32m+[m
                     plug = edge.source_plug[m
                     self.new_edge.source_plug = plug[m
[31m-                    self.new_edge.target_plug = None[m
                     self.new_edge.target_position = self.mapToScene(mouse_position)[m
                     self.new_edge.adjust()[m
                     self.new_edge.show()[m
